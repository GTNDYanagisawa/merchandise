<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2014 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="baseDirectoryPowertools" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/${tenantId}/powertools" />
	</bean>
	<!-- 1) Scan for files -->
	<file:inbound-channel-adapter id="batchFilesPowertools" directory="#{baseDirectoryPowertools}"
		filename-regex="^(.*)-(\d+)\.csv" comparator="fileOrderComparator">
		<int:poller fixed-rate="1000" />
	</file:inbound-channel-adapter>

	<!-- 2) move the file to processing and setup header -->
	<file:outbound-gateway request-channel="batchFilesPowertools" reply-channel="batchFilesPowertoolsProc"
		directory="#{baseDirectoryPowertools}/processing" delete-source-files="true" />
	<int:service-activator input-channel="batchFilesPowertoolsProc" output-channel="batchFilesHeaderInit"
		ref="powertoolsHeaderSetupTask" method="execute" />
	<bean id="powertoolsHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<property name="catalog" value="powertoolsProductCatalog" />
		<property name="net" value="false" />
		<property name="storeBaseDirectory" ref="baseDirectoryPowertools" />
	</bean>
	
	<!-- Transformer converters mappings -->
	<bean id="batchMediaConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="media" 
		  p:converter-ref="batchMediaConverter"/>

	<bean id="batchMediaContainerConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="media" 
		  p:converter-ref="batchMediaContainerConverter"/>

	<bean id="batchMediaProductConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="media" 
		  p:converter-ref="batchMediaProductConverter"/>
							
	<!-- Converters -->
	<bean id="batchMediaConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# Import media from filesystem
				$importFolder=file:$BASE_SOURCE_DIR$/images
				INSERT_UPDATE Media;mediaFormat(qualifier);code[unique=true];mime[default='image/jpeg'];$catalogVersion;folder(qualifier)[default=images];realfilename;@media[translator=de.hybris.platform.impex.jalo.media.MediaDataTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>;1200Wx1200H;/1200Wx1200H/{+1};;;;{+1};$importFolder/1200Wx1200H/{+1}
;515Wx515H;/515Wx515H/{+1};;;;{+1};$importFolder/515Wx515H/{+1}
;300Wx300H;/300Wx300H/{+1};;;;{+1};$importFolder/300Wx300H/{+1}
;96Wx96H;/96Wx96H/{+1};;;;{+1};$importFolder/96Wx96H/{+1}
;65Wx65H;/65Wx65H/{+1};;;;{+1};$importFolder/65Wx65H/{+1}
;30Wx30H;/30Wx30H/{+1};;;;{+1};$importFolder/30Wx30H/{+1}</value>
		</property>
	</bean>
	<bean id="batchMediaContainerConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# Import media container
				INSERT_UPDATE MediaContainer;qualifier[unique=true];medias(code, $catalogVersion);$catalogVersion
			</value>
		</property>
		<property name="impexRow">
			<value>;{1};/1200Wx1200H/{1},/515Wx515H/{1},/300Wx300H/{1},/96Wx96H/{1},/65Wx65H/{1},/30Wx30H/{1}</value>
		</property>
	</bean>
	<bean id="batchMediaProductConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				$thumbnail=thumbnail(code, $catalogVersion)
				$thumbnails=thumbnails(code, $catalogVersion)
				$picture=picture(code, $catalogVersion)
				$detail=detail(code, $catalogVersion)
				$normal=normal(code, $catalogVersion)
				$others=others(code, $catalogVersion)
				$galleryImages=galleryImages(qualifier, $catalogVersion)
				# Import product media
				UPDATE Product;code[unique=true];$picture;$thumbnail;$detail;$others;$normal;$thumbnails;$galleryImages;sequenceId[translator=de.hybris.platform.acceleratorservices.dataimport.batch.converter.GreaterSequenceIdTranslator];$catalogVersion
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};/300Wx300H/{1};/96Wx96H/{1};/1200Wx1200H/{1};/515Wx515H/{1},/96Wx96H/{1},/30Wx30H/{1};/300Wx300H/{1};/96Wx96H/{1};{1};{S}</value>
		</property>
	</bean>
</beans>
